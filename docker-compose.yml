version: "3.8"

services:
  postgres:
    image: postgres
    restart: unless-stopped
    env_file: ./.env
    environment:
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DATABASE
      - POSTGRES_USER=$POSTGRES_USER
    ports:
      - $POSTGRES_LOCAL_PORT:$POSTGRES_DOCKER_PORT
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      springboot-postgres-net:
  backend:
    depends_on:
      - postgres
    build: ./apps/backend
    restart: on-failure
    env_file: ./.env  #=> Reads environment variables from the .env file
    ports:
      - $SPRING_LOCAL_PORT=$SPRING_DOCKER_PORT
    environment:
      #SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:$POSTGRES_DOCKER_PORT/$POSTGRES_DATABASE
      #SPRING_DATASOURCE_USERNAME: $POSTGRES_USER
      #SPRING_DATASOURCE_PASSWORD: $POSTGRES_PASSWORD
      #SPRING_PROFILES_ACTIVE: docker => get src/main/resources/application-docker.properties
      HOST_NAME: postgres
      POSTGRES_PORT: $POSTGRES_DOCKER_PORT
      POSTGRES_DATABASE: $POSTGRES_DATABASE
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    volumes:
      - .m2:/root/.m2 #=> Mounts the .m2 directory (presumably for caching Maven dependencies) from the host into the container
    stdin_open: true #=> Sets stdin_open and tty to true, enabling an interactive shell.
    tty: true
    networks:
      springboot-postgres-net:
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
      args:
        - TARGET_ENV=production # Replace 'production' with the desired environment
    env_file: ./.env
    ports:
      - $FRONTEND_LOCAL_PORT:$FRONTEND_DOCKER_PORT
networks:
  springboot-postgres-net:
volumes:
  postgres-data:
